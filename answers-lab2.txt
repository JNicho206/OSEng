b. User programs will not be able to read or write the kernelâ€™s memory due to the presence of permission bits in the page tables. This means that we can give the user access to the parts of the memory we want them to have access to, including giving them no access above the ULIM line that differentiates between the lower and upper regions of address space meant for the user and kernel respectively. The mechanisms of paging and segmentation help protect the kernel memory.

c. The max amount of physical memory this OS can support is 256 MB. The reasoning for this is that the kernel takes up the addresses from 0xF0000000 [KERNBASE, 4GB) to 0xFFFFFFFF leaving us with 256 MB remaining.

d. If we actually had the maximum amount of physical memory, the overhead for managing memory would be 772 KB .This is broken down first by number of pages where we have to store the struct PageInfo, and since the total amount of physical memory is 256 MB we can divide this by 4096 B (the size of a page) to get 65536 pages. If we multiply this by 8 bytes (size of struct PageInfo) we get 512 KB overhead for storing the struct PageInfo. Next we need to consider the overhead for the page tables and directory. The page table can store 1K page specifiers, so we need 65536/1024 page tables which is equal to 64 and we multiply this by 4096 since a page table is the size of a page and get 256 KB worth of page tables. We also need a page directory to store the page table addresses so we will need another 4 KB to store this. Overall, the page tables and page directories give us 260 KB worth of overhead. Adding this to the overhead for the PageInfo struct, we get the aforementioned 772 KB of overhead for managing memory.

e. We transition to running at an EIP over KERNBASE after the line jmp *%eax that jumps above the KERNBASE. It is okay for us to run at the lower EIP temporarily because we stay in the same 0 to 4MB range due to the mappings. The transition is necessary because eventually the EIP would exit this range and not be in the intended range above KERNBASE.
